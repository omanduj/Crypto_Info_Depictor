@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:wght@500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:wght@500&family=Montserrat&display=swap');

body {
     font-family: 'Montserrat', sans-serif;
     /* Used to set font type of a given tag */
     margin: 0;
 }

 .hero-bg {
/* used to change all things that are under this class */

     background: url('tree_leaves.jpg');
     background-position: 25% 80%;
     /* x and y values, position */
     /* used to set background of a tag */
     color: white;
     /* used to  letter color */
     text-align: center;
     /* used to align text in center of a tag */
     padding-bottom: 4em;
     /* used to add empty space at bottom of a tag */
 }

 header {
     padding: 1em 0;
 }

 .hero-bg a {
     color: white;
     text-decoration: none;
     /* used to remove underline of links, etc */
     font-weight: bold;
     /* used to bold text of a given tag */
     font-size: 1.2rem;
     /* used to alter font size of a given tag */
 }


section {
    margin: 0 3em;
}

h1 {
    font-size: 2.5rem;
    margin: 2em 0 1.9em;
}

h1 span {
    text-transform: uppercase;
    /* used to transform text to uppercase: TREE */
    display: block;
    /* used to make sure nothing is on left or right of tag */
    font-size: 1.4rem;
    position: relative;
    z-index: 1;
}

.hero-bg p {
/* used to reference everything under the class with tag X */
    font-weight: bold;
    margin: -3em 1em 3em;
}

.form-container {
    background-color: white;
    margin: 2em .5em 0;
    border-radius: 3em;
    padding: 2em
}

label {
    color: #478953 ;
    display: block;
    font-weight: bold;
    margin-bottom: .5em;
    font-size: 2em;
}

input[type=text] {
/* refets to input tag where type is == text */
    border: 1px solid #707070;
    width: 100%;
    padding: 1em;
    box-sizing: border-box;
    /* Have to do thise in order to prevent
    extra run off space. Do this when applying
    padding with width */
    border-radius: 3em;
    /* used set appearance 3em = oval 5em = square w/ rounded edges */
    margin-top: 1.2em;
}

.form-container p {
    /* Anything in X class with Y tag */
    color: gray;
    margin-bottom: 1.5em;
    font-weight: normal;
    font-size: .9em;
    margin-top: .3em;
}

input[type=button] {
    background-color: #F89104;
    border: none;
    /* sets border to none (in case it has default) */
    width: 100%;
    color: white;
    font-weight: bold;
    padding: 1em 0;
    border-radius: .5em;
    cursor: pointer;
}

input[type=button]:hover {
/* at input tag with the type being button,
when you hover over it: */
    background-color: rgb(216, 126, 1);
}

.authentic {
    margin: 0;
}

.top {
    animation: fadeIn 2s forwards;
}

img {
    max-width: 100%;
}

.right-col {
    text-align: center;
    margin: 3em 1em;
}

h2 {
    width: 100%;
}

@media (min-width: 730px) {
/* used to control what occurs after screen is > 730px */
    section {
        margin: 0em 4em;
    }
    .form-contianer {
        margin: 2em 4em 0 ;
    }
    .main-column {
        float: right;
        display: block;
        width: 50%;
    }
    .side-column {
        float: right;
        width: 50%;
    }
    section.authentic{
        display: grid;
        grid-template-columns: repeat(2, 50%);
        grid-template-areas:
            "piggy content";
    }

    .right-col {
        grid- area: content;
        padding: 0 10%;
        text-align: left;
        /* align-self: center;  */
    }
    img {
        grid- area: piggy;
    }
}

div[class=arrow] {
    margin-top: 30%;
    margin-bottom: 2%;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-2em);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }

}
